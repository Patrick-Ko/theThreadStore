{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { EvilIcons } from '@expo/vector-icons';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\n\nvar Shipping = function (_React$Component) {\n  _inherits(Shipping, _React$Component);\n\n  var _super = _createSuper(Shipping);\n\n  function Shipping() {\n    var _this;\n\n    _classCallCheck(this, Shipping);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      FirstName: null,\n      LastName: null,\n      City: null,\n      State: null,\n      Zip: null,\n      Address: null,\n      Email: null,\n      PhoneNumber: null\n    };\n\n    _this.request = function () {};\n\n    return _this;\n  }\n\n  _createClass(Shipping, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, null, React.createElement(TextInput, {\n        placeholder: \"First Name\",\n        onChangeText: function onChangeText(newTerm) {\n          return _this2.setState({\n            FirstName: newTerm\n          });\n        },\n        style: styles.input,\n        multiline: true\n      }), React.createElement(TextInput, {\n        placeholder: \"Last Name\",\n        onChangeText: function onChangeText(newTerm) {\n          return _this2.setState({\n            LastName: newTerm\n          });\n        },\n        style: styles.input,\n        multiline: true\n      }), React.createElement(TextInput, {\n        placeholder: \"Address\",\n        onChangeText: function onChangeText(newTerm) {\n          return _this2.setState({\n            Address: newTerm\n          });\n        },\n        style: styles.input,\n        multiline: true\n      }), React.createElement(TextInput, {\n        placeholder: \"City\",\n        onChangeText: function onChangeText(newTerm) {\n          return _this2.setState({\n            City: newTerm\n          });\n        },\n        style: styles.input,\n        multiline: true\n      }), React.createElement(TextInput, {\n        placeholder: \"State\",\n        onChangeText: function onChangeText(newTerm) {\n          return _this2.setState({\n            State: newTerm\n          });\n        },\n        style: styles.input,\n        multiline: true\n      }), React.createElement(TextInput, {\n        placeholder: \"Postal Code\",\n        onChangeText: function onChangeText(newTerm) {\n          return _this2.setState({\n            Zip: newTerm\n          });\n        },\n        style: styles.input,\n        multiline: true\n      }), React.createElement(TextInput, {\n        placeholder: \"First Name\",\n        onChangeText: function onChangeText(newTerm) {\n          return _this2.setState({\n            FirstName: newTerm\n          });\n        },\n        style: styles.input,\n        multiline: true\n      }), React.createElement(TextInput, {\n        placeholder: \"Email\",\n        onChangeText: function onChangeText(newTerm) {\n          return _this2.setState({\n            Email: newTerm\n          });\n        },\n        style: styles.input,\n        multiline: true\n      }), React.createElement(TextInput, {\n        placeholder: \"Phone Number\",\n        onChangeText: function onChangeText(newTerm) {\n          return _this2.setState({\n            PhoneNumber: newTerm\n          });\n        },\n        style: styles.input,\n        multiline: true\n      }), React.createElement(View, {\n        style: styles.row\n      }, React.createElement(Text, null, \"Your privacy is important to us. We will only contact you if there is an issue with your order.\")), React.createElement(View, {\n        style: styles.button\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.props.changeState(1);\n        }\n      }, React.createElement(Text, {\n        style: styles.text\n      }, \"SAVE AND CONTINUTE\"))));\n    }\n  }]);\n\n  return Shipping;\n}(React.Component);\n\nexport { Shipping as default };\nvar styles = StyleSheet.create({\n  input: {\n    fontSize: 17,\n    borderWidth: 1,\n    borderColor: 'grey',\n    marginHorizontal: '5%',\n    marginVertical: '2.5%'\n  },\n  row: {\n    flexDirection: 'row',\n    marginHorizontal: '5%'\n  },\n  button: {\n    backgroundColor: 'orange',\n    marginHorizontal: '5%',\n    height: 40,\n    justifyContent: 'center',\n    borderRadius: 8,\n    marginTop: 10\n  },\n  text: {\n    color: 'white',\n    fontSize: 20,\n    fontWeight: 'bold',\n    textAlign: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/Eric Jiejorm Akpalu/myApp/src/components/Shipping.js"],"names":["React","EvilIcons","TouchableOpacity","Shipping","state","FirstName","LastName","City","State","Zip","Address","Email","PhoneNumber","request","newTerm","setState","styles","input","row","button","props","changeState","text","Component","StyleSheet","create","fontSize","borderWidth","borderColor","marginHorizontal","marginVertical","flexDirection","backgroundColor","height","justifyContent","borderRadius","marginTop","color","fontWeight","textAlign"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {View, Text, TextInput, StyleSheet} from 'react-native';\r\nimport {EvilIcons} from '@expo/vector-icons';\r\nimport { TouchableOpacity } from 'react-native-gesture-handler';\r\n\r\n\r\nexport default class Shipping extends React.Component{\r\n    state = {\r\n        FirstName: null,\r\n        LastName: null,\r\n        City: null,\r\n        State: null,\r\n        Zip: null,\r\n        Address: null,\r\n        Email: null,\r\n        PhoneNumber: null\r\n    }\r\n\r\n    request = () => {\r\n\r\n    }\r\n    render(){\r\n        return(\r\n            <View>\r\n                <TextInput \r\n                    placeholder='First Name'\r\n                    onChangeText={newTerm => this.setState({FirstName: newTerm})}\r\n                    style={styles.input}\r\n                    multiline\r\n                />\r\n                <TextInput \r\n                    placeholder='Last Name'\r\n                    onChangeText={newTerm => this.setState({LastName: newTerm})}\r\n                    style={styles.input}\r\n                    multiline\r\n                />\r\n                <TextInput \r\n                    placeholder='Address'\r\n                    onChangeText={newTerm => this.setState({Address: newTerm})}\r\n                    style={styles.input}\r\n                    multiline\r\n                />\r\n                <TextInput \r\n                    placeholder='City'\r\n                    onChangeText={newTerm => this.setState({City: newTerm})}\r\n                    style={styles.input}\r\n                    multiline\r\n                />\r\n                <TextInput \r\n                    placeholder='State'\r\n                    onChangeText={newTerm => this.setState({State: newTerm})}\r\n                    style={styles.input}\r\n                    multiline\r\n                />\r\n                <TextInput \r\n                    placeholder='Postal Code'\r\n                    onChangeText={newTerm => this.setState({Zip: newTerm})}\r\n                    style={styles.input}\r\n                    multiline\r\n                />\r\n                <TextInput \r\n                    placeholder='First Name'\r\n                    onChangeText={newTerm => this.setState({FirstName: newTerm})}\r\n                    style={styles.input}\r\n                    multiline\r\n                />\r\n                <TextInput \r\n                    placeholder='Email'\r\n                    onChangeText={newTerm => this.setState({Email: newTerm})}\r\n                    style={styles.input}\r\n                    multiline\r\n                />\r\n                <TextInput \r\n                    placeholder='Phone Number'\r\n                    onChangeText={newTerm => this.setState({PhoneNumber: newTerm})}\r\n                    style={styles.input}\r\n                    multiline\r\n                />\r\n                <View style={styles.row}>\r\n                    {/* <EvilIcons name='lock' size={17}/> */}\r\n                    <Text>Your privacy is important to us. We will only contact you if there is an issue with your order.</Text>\r\n                </View>\r\n                <View style={styles.button}>\r\n                    <TouchableOpacity onPress={() => this.props.changeState(1)}>\r\n                        <Text style={styles.text}>\r\n                            SAVE AND CONTINUTE\r\n                        </Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </View>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    input:{\r\n        fontSize: 17,\r\n        borderWidth: 1,\r\n        borderColor: 'grey',\r\n        marginHorizontal: '5%',\r\n        marginVertical: '2.5%'\r\n    },\r\n    row:{\r\n        flexDirection: 'row',\r\n        marginHorizontal: '5%'\r\n    },\r\n    button:{\r\n        backgroundColor: 'orange',\r\n        marginHorizontal: '5%',\r\n        height: 40,\r\n        justifyContent: 'center',\r\n        borderRadius: 8,\r\n        marginTop: 10\r\n    },\r\n    text:{\r\n        color: 'white',\r\n        fontSize: 20,\r\n        fontWeight: 'bold',\r\n        textAlign: 'center'\r\n    }\r\n})"]},"metadata":{},"sourceType":"module"}