{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Icon from \"@expo/vector-icons/MaterialIcons\";\nimport Shipping from \"../components/Shipping\";\nimport Finish from \"../components/Finish\";\n\nvar CheckoutScreen = function (_React$Component) {\n  _inherits(CheckoutScreen, _React$Component);\n\n  var _super = _createSuper(CheckoutScreen);\n\n  function CheckoutScreen() {\n    var _this;\n\n    _classCallCheck(this, CheckoutScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      stage: 0\n    };\n\n    _this.changeStage = function (number) {\n      _this.setState({\n        stage: number\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(CheckoutScreen, [{\n    key: \"render\",\n    value: function render() {\n      var component = null;\n      var component2 = null;\n      var component3 = null;\n\n      if (this.state.stage === 0) {\n        component = React.createElement(Shipping, {\n          changeStage: this.changeStage\n        });\n      } else if (this.state.stage === 1) {\n        component2 = 9;\n      } else if (this.state.stage === 2) {\n        component3 = React.createElement(Finish, null);\n      }\n\n      return React.createElement(View, {\n        style: styles.page\n      }, React.createElement(ScrollView, null, React.createElement(View, {\n        style: styles.blockView\n      }, React.createElement(Text, {\n        style: styles.blockViewText\n      }, \"1. Shipping\")), component, React.createElement(View, {\n        style: styles.blockView\n      }, React.createElement(Text, {\n        style: styles.blockViewText\n      }, \"2. Payment\")), component2));\n    }\n  }]);\n\n  return CheckoutScreen;\n}(React.Component);\n\nexport { CheckoutScreen as default };\nvar styles = StyleSheet.create({\n  page: {\n    height: '100%',\n    backgroundColor: 'white'\n  },\n  blockView: {\n    height: 50,\n    marginHorizontal: '5%',\n    backgroundColor: 'black',\n    justifyContent: 'center',\n    marginVertical: 10\n  },\n  blockViewText: {\n    fontWeight: 'bold',\n    fontSize: 20,\n    color: 'white'\n  },\n  blockViewItems: {\n    height: 50,\n    marginHorizontal: '5%',\n    backgroundColor: 'grey',\n    justifyContent: 'center',\n    marginVertical: 10,\n    flexDirection: 'row'\n  },\n  blockViewItemsText: {\n    fontWeight: 'bold',\n    fontSize: 20,\n    textAlign: 'left'\n  },\n  icon: {}\n});","map":{"version":3,"sources":["C:/Users/Eric Jiejorm Akpalu/myApp/src/screens/CheckoutScreen.js"],"names":["React","Icon","Shipping","Finish","CheckoutScreen","state","stage","changeStage","number","setState","component","component2","component3","styles","page","blockView","blockViewText","Component","StyleSheet","create","height","backgroundColor","marginHorizontal","justifyContent","marginVertical","fontWeight","fontSize","color","blockViewItems","flexDirection","blockViewItemsText","textAlign","icon"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;AAEA,OAAOC,IAAP;AACA,OAAOC,QAAP;AACA,OAAOC,MAAP;;IAGqBC,c;;;;;;;;;;;;;;;UACjBC,K,GAAQ;AACJC,MAAAA,KAAK,EAAE;AADH,K;;UAIRC,W,GAAc,UAACC,MAAD,EAAY;AACtB,YAAKC,QAAL,CAAc;AAACH,QAAAA,KAAK,EAAEE;AAAR,OAAd;AACH,K;;;;;;;WAED,kBAAQ;AACJ,UAAIE,SAAS,GAAG,IAAhB;AACA,UAAIC,UAAU,GAAG,IAAjB;AACA,UAAIC,UAAU,GAAG,IAAjB;;AACA,UAAI,KAAKP,KAAL,CAAWC,KAAX,KAAqB,CAAzB,EAA2B;AACvBI,QAAAA,SAAS,GAAG,oBAAC,QAAD;AAAU,UAAA,WAAW,EAAE,KAAKH;AAA5B,UAAZ;AACH,OAFD,MAEO,IAAI,KAAKF,KAAL,CAAWC,KAAX,KAAqB,CAAzB,EAA2B;AAC9BK,QAAAA,UAAU,GAAG,CAAb;AACH,OAFM,MAEA,IAAI,KAAKN,KAAL,CAAWC,KAAX,KAAqB,CAAzB,EAA2B;AAC9BM,QAAAA,UAAU,GAAG,oBAAC,MAAD,OAAb;AACH;;AACD,aACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC;AAApB,SACI,oBAAC,UAAD,QACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAED,MAAM,CAACE;AAApB,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEF,MAAM,CAACG;AAApB,uBADJ,CADJ,EAIKN,SAJL,EAKI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEG,MAAM,CAACE;AAApB,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEF,MAAM,CAACG;AAApB,sBADJ,CALJ,EAQKL,UARL,CADJ,CADJ;AAcH;;;;EAlCuCX,KAAK,CAACiB,S;;SAA7Bb,c;AAqCrB,IAAMS,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC7BL,EAAAA,IAAI,EAAC;AACDM,IAAAA,MAAM,EAAE,MADP;AAEDC,IAAAA,eAAe,EAAE;AAFhB,GADwB;AAK7BN,EAAAA,SAAS,EAAC;AACNK,IAAAA,MAAM,EAAE,EADF;AAENE,IAAAA,gBAAgB,EAAE,IAFZ;AAGND,IAAAA,eAAe,EAAE,OAHX;AAINE,IAAAA,cAAc,EAAE,QAJV;AAKNC,IAAAA,cAAc,EAAE;AALV,GALmB;AAY7BR,EAAAA,aAAa,EAAC;AACVS,IAAAA,UAAU,EAAE,MADF;AAEVC,IAAAA,QAAQ,EAAE,EAFA;AAGVC,IAAAA,KAAK,EAAE;AAHG,GAZe;AAiB7BC,EAAAA,cAAc,EAAC;AACXR,IAAAA,MAAM,EAAE,EADG;AAEXE,IAAAA,gBAAgB,EAAE,IAFP;AAGXD,IAAAA,eAAe,EAAE,MAHN;AAIXE,IAAAA,cAAc,EAAE,QAJL;AAKXC,IAAAA,cAAc,EAAE,EALL;AAMXK,IAAAA,aAAa,EAAE;AANJ,GAjBc;AAyB7BC,EAAAA,kBAAkB,EAAC;AACfL,IAAAA,UAAU,EAAE,MADG;AAEfC,IAAAA,QAAQ,EAAE,EAFK;AAGfK,IAAAA,SAAS,EAAE;AAHI,GAzBU;AA8B7BC,EAAAA,IAAI,EAAC;AA9BwB,CAAlB,CAAf","sourcesContent":["import React from 'react';\r\nimport {View, ScrollView, Text, StyleSheet, TouchableOpacity} from 'react-native';\r\nimport Icon from 'react-native-vector-icons/MaterialIcons';\r\nimport Shipping from '../components/Shipping';\r\nimport Finish from '../components/Finish';\r\n\r\n\r\nexport default class CheckoutScreen extends React.Component{\r\n    state = {\r\n        stage: 0\r\n    }\r\n\r\n    changeStage = (number) => {\r\n        this.setState({stage: number})\r\n    }\r\n\r\n    render(){\r\n        let component = null\r\n        let component2 = null\r\n        let component3 = null\r\n        if (this.state.stage === 0){\r\n            component = <Shipping changeStage={this.changeStage}/>\r\n        } else if (this.state.stage === 1){\r\n            component2 = 9\r\n        } else if (this.state.stage === 2){\r\n            component3 = <Finish/>\r\n        }\r\n        return(\r\n            <View style={styles.page}>\r\n                <ScrollView>\r\n                    <View style={styles.blockView}>\r\n                        <Text style={styles.blockViewText}>1. Shipping</Text>\r\n                    </View>\r\n                    {component}\r\n                    <View style={styles.blockView}>\r\n                        <Text style={styles.blockViewText}>2. Payment</Text>\r\n                    </View>\r\n                    {component2}\r\n                </ScrollView>\r\n            </View>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    page:{\r\n        height: '100%',\r\n        backgroundColor: 'white'\r\n    },\r\n    blockView:{\r\n        height: 50,\r\n        marginHorizontal: '5%',\r\n        backgroundColor: 'black',\r\n        justifyContent: 'center',\r\n        marginVertical: 10\r\n    },\r\n    blockViewText:{\r\n        fontWeight: 'bold',\r\n        fontSize: 20,\r\n        color: 'white'\r\n    },\r\n    blockViewItems:{\r\n        height: 50,\r\n        marginHorizontal: '5%',\r\n        backgroundColor: 'grey',\r\n        justifyContent: 'center',\r\n        marginVertical: 10,\r\n        flexDirection: 'row'\r\n    },\r\n    blockViewItemsText:{\r\n        fontWeight: 'bold',\r\n        fontSize: 20,\r\n        textAlign: 'left'\r\n    },\r\n    icon:{\r\n        //position: 'absolute',\r\n        //marginLeft: '80%'\r\n    }\r\n})"]},"metadata":{},"sourceType":"module"}